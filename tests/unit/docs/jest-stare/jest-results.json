{
  "numFailedTestSuites": 1,
  "numFailedTests": 6,
  "numPassedTestSuites": 1,
  "numPassedTests": 15,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTodoTests": 0,
  "numTotalTestSuites": 2,
  "numTotalTests": 21,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1757670684257,
  "success": false,
  "testResults": [
    {
      "leaks": false,
      "numFailingTests": 6,
      "numPassingTests": 14,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1757670684447,
        "loadTestEnvironmentEnd": 1757670684301,
        "loadTestEnvironmentStart": 1757670684276,
        "runtime": 146,
        "setupAfterEnvEnd": 1757670684380,
        "setupAfterEnvStart": 1757670684371,
        "setupFilesEnd": 1757670684301,
        "setupFilesStart": 1757670684301,
        "slow": false,
        "start": 1757670684301
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/tests/unit/formatwallet.spec.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "formatWalletAddress 函数测试",
            "基本功能测试"
          ],
          "duration": 1,
          "failing": false,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatWalletAddress 函数测试 基本功能测试 应该正确格式化标准的以太坊地址（带0x前缀）",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "startAt": 1757670684410,
          "status": "passed",
          "title": "应该正确格式化标准的以太坊地址（带0x前缀）"
        },
        {
          "ancestorTitles": [
            "formatWalletAddress 函数测试",
            "基本功能测试"
          ],
          "duration": 0,
          "failing": false,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatWalletAddress 函数测试 基本功能测试 应该正确格式化不带0x前缀的地址",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "startAt": 1757670684412,
          "status": "passed",
          "title": "应该正确格式化不带0x前缀的地址"
        },
        {
          "ancestorTitles": [
            "formatWalletAddress 函数测试",
            "基本功能测试"
          ],
          "duration": 1,
          "failing": false,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatWalletAddress 函数测试 基本功能测试 应该使用默认参数（startLength=6, endLength=4）",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "startAt": 1757670684412,
          "status": "passed",
          "title": "应该使用默认参数（startLength=6, endLength=4）"
        },
        {
          "ancestorTitles": [
            "formatWalletAddress 函数测试",
            "自定义参数测试"
          ],
          "duration": 2,
          "failing": false,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": "0x742d35Cc...9b8c5e",
                "expected": "0x742d35Cc...b8c5e",
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"0x742d35Cc...b8c5e\"\u001b[39m\nReceived: \u001b[31m\"0x742d35Cc...\u001b[7m9\u001b[27mb8c5e\"\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"0x742d35Cc...b8c5e\"\u001b[39m\nReceived: \u001b[31m\"0x742d35Cc...\u001b[7m9\u001b[27mb8c5e\"\u001b[39m\n    at Object.toBe (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/tests/unit/formatwallet.spec.ts:29:22)\n    at Promise.finally.completed (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-runner/build/index.js:343:7)"
          ],
          "fullName": "formatWalletAddress 函数测试 自定义参数测试 应该支持同时自定义起始和结尾长度",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "startAt": 1757670684413,
          "status": "failed",
          "title": "应该支持同时自定义起始和结尾长度"
        },
        {
          "ancestorTitles": [
            "formatWalletAddress 函数测试",
            "自定义参数测试"
          ],
          "duration": 1,
          "failing": false,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatWalletAddress 函数测试 自定义参数测试 应该支持较大的起始和结尾长度",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "startAt": 1757670684419,
          "status": "passed",
          "title": "应该支持较大的起始和结尾长度"
        },
        {
          "ancestorTitles": [
            "formatWalletAddress 函数测试",
            "边界情况测试"
          ],
          "duration": 0,
          "failing": false,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatWalletAddress 函数测试 边界情况测试 空字符串应该返回空字符串",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "startAt": 1757670684420,
          "status": "passed",
          "title": "空字符串应该返回空字符串"
        },
        {
          "ancestorTitles": [
            "formatWalletAddress 函数测试",
            "边界情况测试"
          ],
          "duration": 0,
          "failing": false,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatWalletAddress 函数测试 边界情况测试 null 或 undefined 应该返回空字符串",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "startAt": 1757670684420,
          "status": "passed",
          "title": "null 或 undefined 应该返回空字符串"
        },
        {
          "ancestorTitles": [
            "formatWalletAddress 函数测试",
            "边界情况测试"
          ],
          "duration": 1,
          "failing": false,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": "0x123456...7890",
                "expected": "0x1234567890",
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"0x1234567890\"\u001b[39m\nReceived: \u001b[31m\"0x123456\u001b[7m...\u001b[27m7890\"\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"0x1234567890\"\u001b[39m\nReceived: \u001b[31m\"0x123456\u001b[7m...\u001b[27m7890\"\u001b[39m\n    at Object.toBe (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/tests/unit/formatwallet.spec.ts:53:51)\n    at Promise.finally.completed (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-runner/build/index.js:343:7)"
          ],
          "fullName": "formatWalletAddress 函数测试 边界情况测试 地址长度小于等于 startLength + endLength 时应该返回原地址",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "startAt": 1757670684420,
          "status": "failed",
          "title": "地址长度小于等于 startLength + endLength 时应该返回原地址"
        },
        {
          "ancestorTitles": [
            "formatWalletAddress 函数测试",
            "边界情况测试"
          ],
          "duration": 1,
          "failing": false,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatWalletAddress 函数测试 边界情况测试 刚好超过最小长度的地址应该被格式化",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "startAt": 1757670684421,
          "status": "passed",
          "title": "刚好超过最小长度的地址应该被格式化"
        },
        {
          "ancestorTitles": [
            "formatWalletAddress 函数测试",
            "前缀处理测试"
          ],
          "duration": 0,
          "failing": false,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatWalletAddress 函数测试 前缀处理测试 应该保留原有的0x前缀",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "startAt": 1757670684422,
          "status": "passed",
          "title": "应该保留原有的0x前缀"
        },
        {
          "ancestorTitles": [
            "formatWalletAddress 函数测试",
            "前缀处理测试"
          ],
          "duration": 1,
          "failing": false,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatWalletAddress 函数测试 前缀处理测试 没有0x前缀的地址不应该添加前缀",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "startAt": 1757670684422,
          "status": "passed",
          "title": "没有0x前缀的地址不应该添加前缀"
        },
        {
          "ancestorTitles": [
            "formatWalletAddress 函数测试",
            "特殊字符和格式测试"
          ],
          "duration": 0,
          "failing": false,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatWalletAddress 函数测试 特殊字符和格式测试 应该正确处理大小写混合的地址",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "startAt": 1757670684423,
          "status": "passed",
          "title": "应该正确处理大小写混合的地址"
        },
        {
          "ancestorTitles": [
            "formatWalletAddress 函数测试",
            "特殊字符和格式测试"
          ],
          "duration": 0,
          "failing": false,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": "0X742D...8C5E",
                "expected": "0X742D35...8C5E",
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"0X742D\u001b[7m35\u001b[27m...8C5E\"\u001b[39m\nReceived: \u001b[31m\"0X742D...8C5E\"\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"0X742D\u001b[7m35\u001b[27m...8C5E\"\u001b[39m\nReceived: \u001b[31m\"0X742D...8C5E\"\u001b[39m\n    at Object.toBe (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/tests/unit/formatwallet.spec.ts:89:22)\n    at Promise.finally.completed (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-runner/build/index.js:343:7)"
          ],
          "fullName": "formatWalletAddress 函数测试 特殊字符和格式测试 应该正确处理全大写地址",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "startAt": 1757670684423,
          "status": "failed",
          "title": "应该正确处理全大写地址"
        },
        {
          "ancestorTitles": [
            "formatWalletAddress 函数测试",
            "特殊字符和格式测试"
          ],
          "duration": 0,
          "failing": false,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatWalletAddress 函数测试 特殊字符和格式测试 应该正确处理全小写地址",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "startAt": 1757670684424,
          "status": "passed",
          "title": "应该正确处理全小写地址"
        },
        {
          "ancestorTitles": [
            "formatWalletAddress 函数测试",
            "参数验证测试"
          ],
          "duration": 0,
          "failing": false,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatWalletAddress 函数测试 参数验证测试 起始长度为0时应该正常工作",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "startAt": 1757670684424,
          "status": "passed",
          "title": "起始长度为0时应该正常工作"
        },
        {
          "ancestorTitles": [
            "formatWalletAddress 函数测试",
            "参数验证测试"
          ],
          "duration": 1,
          "failing": false,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": "0x742d35...742d35Cc6634C0532925a3b8D45c7c8f8b9b8c5e",
                "expected": "0x742d35...",
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"0x742d35...\"\u001b[39m\nReceived: \u001b[31m\"0x742d35...\u001b[7m742d35Cc6634C0532925a3b8D45c7c8f8b9b8c5e\u001b[27m\"\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"0x742d35...\"\u001b[39m\nReceived: \u001b[31m\"0x742d35...\u001b[7m742d35Cc6634C0532925a3b8D45c7c8f8b9b8c5e\u001b[27m\"\u001b[39m\n    at Object.toBe (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/tests/unit/formatwallet.spec.ts:107:22)\n    at Promise.finally.completed (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-runner/build/index.js:343:7)"
          ],
          "fullName": "formatWalletAddress 函数测试 参数验证测试 结尾长度为0时应该正常工作",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "startAt": 1757670684424,
          "status": "failed",
          "title": "结尾长度为0时应该正常工作"
        },
        {
          "ancestorTitles": [
            "formatWalletAddress 函数测试",
            "参数验证测试"
          ],
          "duration": 0,
          "failing": false,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": "0x...742d35Cc6634C0532925a3b8D45c7c8f8b9b8c5e",
                "expected": "0x...",
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"0x...\"\u001b[39m\nReceived: \u001b[31m\"0x...\u001b[7m742d35Cc6634C0532925a3b8D45c7c8f8b9b8c5e\u001b[27m\"\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"0x...\"\u001b[39m\nReceived: \u001b[31m\"0x...\u001b[7m742d35Cc6634C0532925a3b8D45c7c8f8b9b8c5e\u001b[27m\"\u001b[39m\n    at Object.toBe (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/tests/unit/formatwallet.spec.ts:112:22)\n    at Promise.finally.completed (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-runner/build/index.js:343:7)"
          ],
          "fullName": "formatWalletAddress 函数测试 参数验证测试 起始和结尾长度都为0时应该只显示前缀和省略号",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "startAt": 1757670684425,
          "status": "failed",
          "title": "起始和结尾长度都为0时应该只显示前缀和省略号"
        },
        {
          "ancestorTitles": [
            "formatWalletAddress 函数测试",
            "参数验证测试"
          ],
          "duration": 1,
          "failing": false,
          "failureDetails": [
            {
              "matcherResult": {
                "actual": "0x742d35Cc6634C0532925a3b8D45c7c8f8b9b8c5...8c5e",
                "expected": "0x...8c5e",
                "message": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"0x...8c5e\"\u001b[39m\nReceived: \u001b[31m\"0x\u001b[7m742d35Cc6634C0532925a3b8D45c7c8f8b9b8c5\u001b[27m...8c5e\"\u001b[39m",
                "name": "toBe",
                "pass": false
              }
            }
          ],
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"0x...8c5e\"\u001b[39m\nReceived: \u001b[31m\"0x\u001b[7m742d35Cc6634C0532925a3b8D45c7c8f8b9b8c5\u001b[27m...8c5e\"\u001b[39m\n    at Object.toBe (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/tests/unit/formatwallet.spec.ts:119:23)\n    at Promise.finally.completed (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-runner/build/index.js:275:16)\n    at runTest (/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/node_modules/jest-runner/build/index.js:343:7)"
          ],
          "fullName": "formatWalletAddress 函数测试 参数验证测试 负数参数应该被处理为0",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "retryReasons": [],
          "startAt": 1757670684425,
          "status": "failed",
          "title": "负数参数应该被处理为0"
        },
        {
          "ancestorTitles": [
            "formatWalletAddress 函数测试",
            "性能和压力测试"
          ],
          "duration": 0,
          "failing": false,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatWalletAddress 函数测试 性能和压力测试 应该能处理非常长的地址字符串",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "startAt": 1757670684426,
          "status": "passed",
          "title": "应该能处理非常长的地址字符串"
        },
        {
          "ancestorTitles": [
            "formatWalletAddress 函数测试",
            "性能和压力测试"
          ],
          "duration": 1,
          "failing": false,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "formatWalletAddress 函数测试 性能和压力测试 应该能批量处理多个地址",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "startAt": 1757670684426,
          "status": "passed",
          "title": "应该能批量处理多个地址"
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mformatWalletAddress 函数测试 › 自定义参数测试 › 应该支持同时自定义起始和结尾长度\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"0x742d35Cc...b8c5e\"\u001b[39m\n    Received: \u001b[31m\"0x742d35Cc...\u001b[7m9\u001b[27mb8c5e\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 |\u001b[39m     test(\u001b[32m'应该支持同时自定义起始和结尾长度'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m formatWalletAddress(validAddress\u001b[33m,\u001b[39m \u001b[35m8\u001b[39m\u001b[33m,\u001b[39m \u001b[35m6\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 29 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoBe(\u001b[32m'0x742d35Cc...b8c5e'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 30 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 31 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 32 |\u001b[39m     test(\u001b[32m'应该支持较大的起始和结尾长度'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/formatwallet.spec.ts\u001b[39m\u001b[0m\u001b[2m:29:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mformatWalletAddress 函数测试 › 边界情况测试 › 地址长度小于等于 startLength + endLength 时应该返回原地址\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"0x1234567890\"\u001b[39m\n    Received: \u001b[31m\"0x123456\u001b[7m...\u001b[27m7890\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 51 |\u001b[39m       expect(formatWalletAddress(shortAddress))\u001b[33m.\u001b[39mtoBe(shortAddress)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 52 |\u001b[39m       expect(formatWalletAddress(veryShortAddress))\u001b[33m.\u001b[39mtoBe(veryShortAddress)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 53 |\u001b[39m       expect(formatWalletAddress(\u001b[32m'0x1234567890'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m'0x1234567890'\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// 正好10位\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 54 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 55 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 56 |\u001b[39m     test(\u001b[32m'刚好超过最小长度的地址应该被格式化'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/formatwallet.spec.ts\u001b[39m\u001b[0m\u001b[2m:53:51)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mformatWalletAddress 函数测试 › 特殊字符和格式测试 › 应该正确处理全大写地址\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"0X742D\u001b[7m35\u001b[27m...8C5E\"\u001b[39m\n    Received: \u001b[31m\"0X742D...8C5E\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 87 |\u001b[39m       \u001b[36mconst\u001b[39m upperCaseAddress \u001b[33m=\u001b[39m \u001b[32m'0X742D35CC6634C0532925A3B8D45C7C8F8B9B8C5E'\u001b[39m\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 88 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m formatWalletAddress(upperCaseAddress)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 89 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoBe(\u001b[32m'0X742D35...8C5E'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 90 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 91 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 92 |\u001b[39m     test(\u001b[32m'应该正确处理全小写地址'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/formatwallet.spec.ts\u001b[39m\u001b[0m\u001b[2m:89:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mformatWalletAddress 函数测试 › 参数验证测试 › 结尾长度为0时应该正常工作\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"0x742d35...\"\u001b[39m\n    Received: \u001b[31m\"0x742d35...\u001b[7m742d35Cc6634C0532925a3b8D45c7c8f8b9b8c5e\u001b[27m\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 105 |\u001b[39m     test(\u001b[32m'结尾长度为0时应该正常工作'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 106 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m formatWalletAddress(validAddress\u001b[33m,\u001b[39m \u001b[35m6\u001b[39m\u001b[33m,\u001b[39m \u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 107 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoBe(\u001b[32m'0x742d35...'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 108 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 109 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 110 |\u001b[39m     test(\u001b[32m'起始和结尾长度都为0时应该只显示前缀和省略号'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/formatwallet.spec.ts\u001b[39m\u001b[0m\u001b[2m:107:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mformatWalletAddress 函数测试 › 参数验证测试 › 起始和结尾长度都为0时应该只显示前缀和省略号\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"0x...\"\u001b[39m\n    Received: \u001b[31m\"0x...\u001b[7m742d35Cc6634C0532925a3b8D45c7c8f8b9b8c5e\u001b[27m\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 110 |\u001b[39m     test(\u001b[32m'起始和结尾长度都为0时应该只显示前缀和省略号'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 111 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m formatWalletAddress(validAddress\u001b[33m,\u001b[39m \u001b[35m0\u001b[39m\u001b[33m,\u001b[39m \u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 112 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoBe(\u001b[32m'0x...'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 113 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 114 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 115 |\u001b[39m     test(\u001b[32m'负数参数应该被处理为0'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/formatwallet.spec.ts\u001b[39m\u001b[0m\u001b[2m:112:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mformatWalletAddress 函数测试 › 参数验证测试 › 负数参数应该被处理为0\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"0x...8c5e\"\u001b[39m\n    Received: \u001b[31m\"0x\u001b[7m742d35Cc6634C0532925a3b8D45c7c8f8b9b8c5\u001b[27m...8c5e\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 117 |\u001b[39m       \u001b[36mconst\u001b[39m result2 \u001b[33m=\u001b[39m formatWalletAddress(validAddress\u001b[33m,\u001b[39m \u001b[35m6\u001b[39m\u001b[33m,\u001b[39m \u001b[33m-\u001b[39m\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 118 |\u001b[39m       \u001b[90m// 注意：slice(-1) 会从末尾开始，所以这里测试实际行为\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 119 |\u001b[39m       expect(result1)\u001b[33m.\u001b[39mtoBe(\u001b[32m'0x...8c5e'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 120 |\u001b[39m       expect(result2)\u001b[33m.\u001b[39mtoBe(\u001b[32m'0x742d35...'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 121 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 122 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/unit/formatwallet.spec.ts\u001b[39m\u001b[0m\u001b[2m:119:23)\u001b[22m\u001b[2m\u001b[22m\n"
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1757670684482,
        "loadTestEnvironmentEnd": 1757670684461,
        "loadTestEnvironmentStart": 1757670684458,
        "runtime": 21,
        "setupAfterEnvEnd": 1757670684480,
        "setupAfterEnvStart": 1757670684480,
        "setupFilesEnd": 1757670684461,
        "setupFilesStart": 1757670684461,
        "slow": false,
        "start": 1757670684461
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/media/test/7B2F59427DA77DE4/xx/webpack-ai-spa/tests/unit/test.spec.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "综合性的测试"
          ],
          "duration": 0,
          "failing": false,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "综合性的测试 简单的测试",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "startAt": 1757670684481,
          "status": "passed",
          "title": "简单的测试"
        }
      ],
      "failureMessage": null
    }
  ],
  "wasInterrupted": false
}